name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: botdatting_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies (Frontend)
      run: npm install --legacy-peer-deps

    - name: Install dependencies (API)
      working-directory: ./api
      run: npm install --legacy-peer-deps

    - name: Lint Frontend
      run: npm run lint

    - name: Lint API
      working-directory: ./api
      run: npm run lint

    - name: Build Frontend
      run: npm run build

    - name: Build API
      working-directory: ./api
      run: npm run build

    - name: Test API
      working-directory: ./api
      run: npm run test
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: password
        DB_DATABASE: botdatting_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        file: ./api/Dockerfile.api
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/botdatting-api:latest

    - name: Build and push Web image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.web
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/botdatting-web:latest

    - name: Deploy to server
      if: success()
      run: |
        echo "Deployment would happen here"
        # Add your deployment commands here
        # Example: ssh to server, pull images, restart containers
